{"version":3,"sources":["components/Filter/filter.module.css","components/Form/form.module.css","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","state","name","number","handleNameChange","target","value","setState","props","getName","hanndleSubmit","e","preventDefault","getContact","id","uuidv4","this","className","styles","form","onSubmit","label","input","type","onChange","button","Component","ContactList","contactList","deleteContact","TransitionGroup","component","map","contact","CSSTransition","timeout","classNames","unmountOnExit","onClick","Filter","filter","getFilterName","Notification","App","contacts","notify","data","flag","el","prev","notifyTrue","event","filteredItems","toLowerCase","includes","contactId","localStorage","getItem","contactsParsed","JSON","parse","prevProps","prevState","setItem","stringify","in","onEntered","appear","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e8c31e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__3MaPd\",\"input\":\"filter_input__3jOHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3uNSF\",\"label\":\"form_label__1zElQ\",\"input\":\"form_input__3SuQa\",\"button\":\"form_button__V0-J5\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n    this.props.getName(this.state.name);\r\n  };\r\n\r\n  hanndleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.getContact({ ...this.state, id: uuidv4() });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.hanndleSubmit}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleNameChange}\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone:\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleNameChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  getContact: PropTypes.func,\r\n  getName: PropTypes.func,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './contactList.css';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nexport function ContactList({ contactList, deleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"list\">\r\n      {contactList.map(contact => {\r\n        return (\r\n          <CSSTransition\r\n            key={contact.id}\r\n            timeout={250}\r\n            classNames=\"adddelete\"\r\n            unmountOnExit\r\n          >\r\n            <li className=\"item\" key={contact.id}>\r\n              <span>{contact.name}</span>\r\n              <span>: {contact.number}</span>\r\n              <button\r\n                className=\"button\"\r\n                onClick={() => deleteContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object),\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  deleteContact: PropTypes.func,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nexport function Filter({ filter, getFilterName }) {\r\n  return (\r\n    <>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={getFilterName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  getFilterName: PropTypes.func,\r\n};","import React from 'react';\r\nimport './notification.css';\r\n\r\nexport const Notification = () => {\r\n  return <div className=\"notify\">This contact is already in exist!</div>;\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport { Form } from './components/Form/Form';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport { Notification } from './components/Notification/Notification';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    notify: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const contactsParsed = JSON.parse(contacts);\n    if (contactsParsed) {\n      this.setState({ contacts: contactsParsed });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  getName = data => {\n    this.setState({ name: data });\n  };\n\n  getContact = contact => {\n    let flag = true;\n\n    this.state.contacts.map(el =>\n      el.name === contact.name ? (flag = false) : '',\n    );\n\n    flag\n      ? this.setState(prev => {\n          return { ...prev, contacts: [...prev.contacts, contact] };\n        })\n      : this.notifyTrue();\n  };\n\n  notifyTrue() {\n    this.setState({ notify: true });\n  }\n\n  getFilterName = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredItems = () => {\n    return this.state.filter\n      ? this.state.contacts.filter(el =>\n          el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <CSSTransition\n          in={this.state.notify}\n          timeout={2000}\n          classNames=\"notify\"\n          unmountOnExit\n          onEntered={() => this.setState({ notify: false })}\n        >\n          <Notification />\n        </CSSTransition>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={2000}\n          classNames=\"op\"\n          unmountOnExit\n        >\n          <h2 className=\"title\">Phonebook</h2>\n        </CSSTransition>\n        <Form getContact={this.getContact} getName={this.getName} />\n        <CSSTransition\n          in={this.state.contacts.length >= 1}\n          timeout={300}\n          unmountOnExit\n          classNames=\"title-contacts\"\n        >\n          <h2 className=\"title-contacts\">Contacts</h2>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.contacts.length >= 2}\n          timeout={300}\n          unmountOnExit\n          classNames=\"filter\"\n        >\n          <Filter\n            filter={this.state.filter}\n            getFilterName={this.getFilterName}\n          />\n        </CSSTransition>\n        <ContactList\n          contactList={this.filteredItems()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}